#!/usr/bin/env bash
# b5 Taskfile, see https://git.team23.de/build/b5 for details

task:run() {
    docker:docker-compose up "$@"
}

task:halt() {
    docker:docker-compose down "$@"
}

task:composer() {
    docker:command:composer "$@"
}

task:composer-cms() {
    docker:command:composer-cms "$@"
}

task:artisan() {
    docker:command:artisan "$@"
}

task:npm() {
    docker:command:npm "$@"
}

task:npm-cms() {
    docker:command:npm-cms "$@"
}

task:phpunit() {
    docker:command:phpunit "$@"
}

task:phpunit-cms() {
    docker:command:phpunit-cms "$@"
}

task:shell() {
    container="$1"
    command="$2"
    additionalArguments="${@:3}"
    docker:container_run "${container:-php}" "${command:-/bin/bash}" ${additionalArguments:-}
}

task:link-assets(){
    DIR="../web/public/vendor/cms"
    if [[ ! -d "$DIR" ]]; then
      mkdir -p ${DIR}
    else
      rm -rf ${DIR}
    fi
    if [[ ! -L "$DIR" ]]; then
      (
        cd ../web/public/vendor && ln -s ../../../packages/laravel-cms/dist cms
      )
    fi
}

##########################################################
# Database tasks                                         #
##########################################################

# Export the current local database to the configured db path
task:db:export() {
    mkdir -p "${CONFIG_paths_db}"

    docker:container_run \
      --pipe-out \
      --force-exec "${CONFIG_app_db_host}" \
      mysqldump \
        --default-character-set=utf8 \
        --set-charset \
        --single-transaction \
        --disable-keys \
        -h "${CONFIG_app_db_host}" --protocol=TCP \
        -u "${CONFIG_app_db_user}" \
        "-p${CONFIG_app_db_pass}" \
        "${CONFIG_app_db_name}" \
    | gzip > "${CONFIG_paths_db}/${CONFIG_project_key}_local_$( date "+%Y-%m-%d" ).sql.gz"
}

# Import a database from the configured db path
#
# param1:
#   - name of the dumpfile to import or
#   - one of the following TYPEs, in order to import the database of the format 'name_{TYPE}_yyyy-mm-dd.sql.gz':
#     local | live | staging
task:db:import() {
    local DUMPNAME=${1:-}

    if [ -z "$DUMPNAME" ]; then
        DUMPNAME="live"
    fi
    case "${DUMPNAME}" in
        live|local|staging)
            DUMPNAME="${CONFIG_project_key}_${DUMPNAME}_$( date "+%Y-%m-%d" ).sql.gz"
            ;;
    esac

    if [ ! -e "${CONFIG_paths_db}/${DUMPNAME}" ]; then
        echo "Dump does not exist:"
        echo "(${CONFIG_paths_db}/${DUMPNAME})"
        exit 1
    fi

    cat "${CONFIG_paths_db}/${DUMPNAME}" \
    | gunzip \
    | docker:container_run \
      --pipe-in \
      --force-exec "${CONFIG_app_db_host}" \
      mysql \
        -h "${CONFIG_app_db_host}" --protocol=TCP \
        -u "${CONFIG_app_db_user}" \
        "-p${CONFIG_app_db_pass}" \
        -D "${CONFIG_app_db_name}"
}
